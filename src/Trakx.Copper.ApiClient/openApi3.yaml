openapi: 3.0.0
servers:
  - url: 'https://api.copper.co'
    description: 'Main copper server'
info:
  version: '2'
  title: Copper API
  description: 'This is the copper openApi doc'
paths:
  /platform/accounts:
    get:
      summary: This retrieves information about all of your accounts, including portfolios and wallets in _embedded section.
      operationId: GetAccounts
      responses:
        '200':
          description: Return all accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountResponse"
      tags:
        - Accounts
  /platform/bank-accounts:
    get:
      summary: This retrieves information about all of your bank accounts.
      operationId: GetBankAccounts
      responses:
        '200':
          description: Return all bank accounts
      tags:
        - Accounts
  /platform/crypto-addresses:
    get:
      summary: This retrieves information about all of your whitelisted crypto addresses.
      operationId: GetWhitelistedAddresses
      responses:
        '200':
          description: 'Return all white listed addresses'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cryptoAddressResponse"
      tags:
        - Accounts
  /platform/wallets:
    get:
      summary: This retrieves information about all of your wallets. It doesn’t include deposit targets info.
      operationId: GetWallets
      responses:
        '200':
          description: 'return all of the wallets'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/walletResponse"
      tags:
        - Accounts
  /platform/delegated-funds:
    get:
      summary: Get delegated funds
      operationId: Getdelegatedfunds
      responses:
        '200':
          description: ''
      tags:
        - Accounts
    post:
      summary: Delegate funds
      operationId: Delegatefunds
      responses:
        '200':
          description: ''
      requestBody:
        required: true
        content:
          application/vnd.update+json:
            schema:
              type: string
              example:
                requestId: '{{copperExternalId}}'
                portfolioId: 9dc6d4a1dd52bae94
                currency: BNB
                mainCurrency: BNB
                amount: 1
                delegateOrganizationId: PSHEOTC
            example: "{\n\t\"requestId\": \"{{copperExternalId}}\",\n\t\"portfolioId\": \"9dc6d4a1dd52bae94\",\n\t\"currency\": \"BNB\",\n\t\"mainCurrency\": \"BNB\",\n\t\"amount\": 1,\n\t\"delegateOrganizationId\": \"PSHEOTC\"\n}"
      tags:
        - Accounts
  /platform/managed-funds:
    get:
      summary: Get managed funds
      operationId: Getmanagedfunds
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Accounts
  /platform/orders:
    get:
      summary: This retrieves information about all of your orders.
      operationId: GetOrders
      parameters:
        - in: query
          name: externalOrderId
          description: filter by external order id, a list will be returned with one item or empty if nothing found
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/updatedSince'
        - $ref: '#/components/parameters/portfolioId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: ''
      tags:
        - Orders
    post:
      summary: Create order
      operationId: Createorder
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                externalOrderId: '{{copperExternalId}}'
                orderType: withdraw
                baseCurrency: XRP
                mainCurrency: XRP
                amount: '10'
                portfolioId: '{{portfolioId}}'
                toAddress: '{{address}}'
            example: |-
              {
                  "externalOrderId": "{{copperExternalId}}",  
                  "orderType": "withdraw",
                  "baseCurrency": "XRP",
                  "mainCurrency": "XRP",
                  "amount": "10",
                  "portfolioId": "{{portfolioId}}",
                  "toAddress": "{{address}}"
              }
      tags:
        - Orders
  /platform/orders/{orderId}:
    get:
      summary: Get order
      operationId: Getorder
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Orders
    patch:
      summary: Cancel order
      operationId: Cancelorder
      parameters:
        - name: orderId
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: orderId
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/vnd.cancel-order+json:
            schema:
              type: string
              example: {}
            example: '{}'
      tags:
        - Orders
  /platform/wallet-messages:
    get:
      summary: Get messages
      operationId: Getmessages
      parameters:
        - name: externalOrderId
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: updatedSince
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: portfolioId
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: limit
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: offset
          in: query
          required: true
          style: form
          schema:
            type: number
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - MessageSigning
    post:
      summary: Create message
      operationId: Createmessage
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                externalMessageId: '{{copperExternalId}}'
                mainCurrency: XZC
                message: test
                portfolioId: '{{portfolioId}}'
            example: |-
              {
                  "externalMessageId": "{{copperExternalId}}",  
                  "mainCurrency": "XZC",
                  "message": "test",
                  "portfolioId": "{{portfolioId}}"
              }
      tags:
        - MessageSigning
  /platform/wallet-messages/{messageId}:
    get:
      summary: Get message
      operationId: Getmessage
      parameters:
        - $ref: '#/components/parameters/messageId'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - MessageSigning
    patch:
      summary: Cancel message
      operationId: Cancelmessage
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: messageId
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/vnd.cancel-wallet-message+json:
            schema:
              type: string
              example: {}
            example: '{}'
      tags:
        - MessageSigning
  /platform/proxy-wallets/:
    post:
      summary: Create proxy wallet
      operationId: Createproxywallet
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                externalId: '{{copperExternalId}}'
                currency: XRP
                targetAddress: '{{address}}'
            example: |-
              {
                  "externalId": "{{copperExternalId}}",
                  "currency": "XRP",
                  "targetAddress": "{{address}}"
              }
      tags:
        - ProxyWallets
    get:
      summary: Get proxy wallets
      operationId: Getproxywallets
      parameters:
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/targetAddress'
        - $ref: '#/components/parameters/targetDestinationTag'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - ProxyWallets
  /platform/proxy-wallets/{proxyWalletId}:
    get:
      summary: Get proxy wallet
      operationId: Getproxywallet
      parameters:
        - $ref: '#/components/parameters/proxyWalletId'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - ProxyWallets
  /platform/proxy-transactions/:
    get:
      summary: Get proxy transacrtions
      operationId: Getproxytransacrtions
      parameters:
        - name: currency
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: updatedSince
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: limit
          in: query
          required: true
          style: form
          schema:
            type: number
        - name: offset
          in: query
          required: true
          style: form
          schema:
            type: number
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - ProxyWallets 
  
  
  
components:
  schemas:
      account:
        type: object
        properties:
          accountId:
            type: string
            description : unique account identifier
          organizationId: 
            type: string
            description : unique organization identifier that includes this account
            nullable: true
          reportingCurrency: 
            type: string
            description : currency code used for reports
          accountName: 
            type: string
            description : account name
          createdBy: 
            type: string
            description : account creator user ID
          createdAt: 
            type: integer
            format: int64
            description : time of account creation
          updatedBy: 
            type: integer
            format: int64
            nullable: true
            description: time of latest account update
          updatingAt: 
            type: string
            nullable: true
            description : user ID that made last account update
          _embedded:
            type: object 
            properties:
              wallets:
                type: array
                items:
                  $ref: "#/components/schemas/wallet"
              portfolios:
                type: array
                items:
                  $ref: "#/components/schemas/portfolio"
      depositTarget:
        type: object
        properties:
          targetType:
            type: string
            description: may be crypto or bank-account
          mainCurrency:
            type: string
            nullable: true
            description : Currency of main blockchain (e.g. may be BTC or ETH for USDT currency)
          address:
            type: string
            nullable: true
            description: blockchain address
          destinationTag:
            type: integer
            format: int64
            nullable: true
            description : address destination tag
          memo:
            type: string
            nullable: true
            description : address memo
          accountName:
            type: string
            nullable: true
            description: bank account details
          recipientAddress:
            type: string
            nullable: true
            description: bank account details
          iban:
            type: string
            nullable: true
            description: bank account details
          swiftCode:
            type: string
            nullable: true
            description: bank account details
          aba:
            type: string
            nullable: true
            description: bank account details
          bankName:
            type: string
            nullable: true
            description: bank account details
          bankAddress:
            type: string
            nullable: true
            description: bank account details
          accountNumber:
            type: string
            nullable: true
            description: bank account details
          referenceNumber:
            type: string
            nullable: true
            description: bank account details
          billingAddress:
            type: string
            nullable: true
            description: bank account details
          sortCode:
            type: string
            nullable: true
            description: bank account details
      walletExtra:
        type: object
        properties:
          extendedPublicKey:
            type: string
            nullable: true
            description: vault extended public key
          externalAccountId:
            type: string
            nullable: true
            description: third-party identifier
      wallet:
        type: object
        properties:
          walletId: 
            type: string
            description: unique wallet identifier
          portfolioId: 
            type: string
            description: unique portfolio identifier that includes this wallet
          currency: 
            type: string
            description: wallet currency
          mainCurrency: 
            type: string
            nullable: true
            description: for Vault Currency of main blockchain (e.g. For USDT, it could be either ETH or BTC)
          balance: 
            type: number
            format: double
            description: current total balance
          reserve: 
            type: number
            format: double
            description: reserved balance
          createdBy:
            type: string
            description: wallet creator user ID
          updatedBy:
            type: string
            nullable: true
            description: user ID that made last wallet update
          createdAt:
            type: integer
            format: int64
            description: time of wallet creation
          updatedAt:
            type: integer
            format: int64
            nullable: true
            description: time of latest wallet update
          extra: 
            $ref: "#/components/schemas/walletExtra"
          accountId: 
            type: string
            description: unique account identifier that includes this wallet
          organizationId:
            type: string
            nullable: true
            description: unique organization identifier that includes this wallet
          _embedded: 
            nullable: true
            type: array
            items:
              $ref: "#/components/schemas/depositTarget"
      portfolio:
        type: object
        properties:
          portfolioId:
            type: string
            description: unique portfolio identifier
          accountId:
            type: string
            description: unique account identifier
          portfolioName	:
            type: string
            description: portfolio name
          portfolioType:
            description: portfolio type
            type: string
            enum:
              - custody
              - trading
              - external
          createdBy:
            type: string
            description: portfolio creator user ID
          updatedBy:
            type: string
            nullable: true
            description: user ID that made last portfolio update
          createdAt:
            type: integer
            format: int64
            description: time of portfolio creation
          updatedAt:
            type: integer
            format: int64
            nullable: true
            description: time of latest portfolio update
          isActive:
            type: boolean
            description: Boolean flag shows active status for portfolio (archived or not)
          organizationId:
            type: string
            nullable: true
            description: unique organization identifier that includes this portfolio
          extra:
            $ref: "#/components/schemas/portfolioExtra"
      portfolioExtra:
        type: object
        properties: 
          exchange:
            type: string
            nullable: true
            description: external portfolio exchange
          exchangeWalletType:   
            type: string
            nullable: true
            description: external portfolio exchange type
          tradingKeys: 
            type: object
            nullable : true
            description: trading keys for external portfolio
            additionalProperties:
              type: string
              description: public part of trading key
          viewKeys: 
            type: object
            nullable : true
            description: view only keys for external portfolio
            additionalProperties:
              type: string
              description: public part of view only key
          bitstampId:
            type: string
            nullable: true
            description: for Bitstamp external account
          parentPortfolioId	:
            type: string
            nullable: true
            description: if external account depends on other external account
          deribitAccountId	:
            type: string
            nullable: true
            description: for Deribit external account
          huobiAccountId: 
            type: string
            nullable: true
            description: for Huobi external account
          usdWithdrawalLimit:
            type: number
            nullable: true
            format: double
          baseCurrency: 
            type: string
            nullable: true
            description: for external account that use margin pair
          quoteCurrency: 
            type: string
            nullable: true
            description: for external account that use margin pair
          showWalletBalance:
            description: what type of balance to show for external account
            type: string
            enum:
              - real
              - margin
          externalAccountId: 
            type: string
            nullable: true
            description: third-party identifier
      cryptoAddress:
        type: object
        properties:
          cryptoAddressId: 
            type: string
            description: unique crypto address identifier
          accountId: 
            type: string
            description: unique account identifier
          organizationId: 
            type: string
            nullable: true
            description: unique organization identifier
          currency:
            type: string
            description: crypto address currency
          mainCurrency: 
            type: string
            nullable: true
            description: Currency of main blockchain (e.g. may be BTC or ETH for USDT currency)
          name: 
            type: string
            description: crypto address name
          address:
            type: string
          destinationTag: 
            type: integer
            format: int64
            description: destination tag for XRP address
          memo:
            type: string
            nullable: true
            description: additional identifier for address
          lastUsedAt:
            type: integer
            format: int64
            nullable: true
            description: time of last usage for crypto address
          createdBy:
            type: string
            description: crypto address creator user ID
          updatedBy:
            type: string
            nullable: true
            description: user ID that made last crypto address update
          createdAt:
            type: integer
            format: int64
            description: time of crypto address creation
          updatedAt:
            type: integer
            format: int64
            nullable: true
            description: time of latest crypto address update
      walletResponse:
        type: object
        properties:
          wallets:
            type: array
            items:
              $ref: "#/components/schemas/wallet"
      accountResponse:
        type: object
        properties:
          accounts:
            type: array
            items:
              $ref: "#/components/schemas/account"
      cryptoAddressResponse:
        type: object
        properties:
          cryptoAddresses:
            type: array
            items:
              $ref: "#/components/schemas/cryptoAddress"
  parameters:
    externalOrderId:
      name: externalOrderId
      in: query
      required: true
      style: form
      schema:
        type: number
    updatedSince:
      name: updatedSince
      in: query
      required: true
      style: form
      schema:
        type: number
    portfolioId:
      name: portfolioId
      in: query
      required: true
      style: form
      schema:
        type: number
    limit:
      name: limit
      in: query
      required: true
      style: form
      schema:
        type: number
    offset:
      name: offset
      in: query
      required: true
      style: form
      schema:
        type: number
    orderId:
      name: orderId
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: orderId
    messageId:
      name: messageId
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: messageId
    proxyWalletId:
      name: proxyWalletId
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: proxyWalletId
    currency:
      name: currency
      in: query
      required: true
      style: form
      schema:
        type: number
    targetAddress:
      name: targetAddress
      in: query
      required: true
      style: form
      schema:
        type: number
    targetDestinationTag:
      name: targetDestinationTag
      in: query
      required: true
      style: form
      schema:
        type: number